package material.request;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;  
import java.util.Date;  
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Timer;
import java.util.TimerTask;

import java.awt.event.KeyEvent;


/**
 *
 * @author Filipe Brito
 */
public class Request extends javax.swing.JFrame {
   Connection conn = null;
   PreparedStatement pst = null;
   ResultSet rs = null;
   DefaultTableModel model = new DefaultTableModel();
    
    /**
     * Creates new form LQ_Request_Producao
     */
    public Request() {
        initComponents();

        Object col[] = {"ID", "Work Center", "Material", "Date"};
        model.setColumnIdentifiers(col);
        jTable1.setModel(model);
        conn = Admin.ConnectDB();
        
        
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setWidth(0);
        
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void defineOperator(String operator){
        jLabel2.setText(operator);   
    }
    
    
    public static Connection ConnectDB(){
        try{
           Class.forName("org.sqlite.JDBC");
           Connection conn = DriverManager.getConnection("jdbc:sqlite:Material_Request_DB.db");
           return conn;
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }




    public void updateTable(){
        Timer timer = new Timer();
        int begin = 0;
        int timeInterval = 60000;
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            
            public void run() {
                DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
                mod.setRowCount(0);

                conn = Admin.ConnectDB();
                if (conn !=null){
                    String sql ="SELECT ID, workcenter, material, date FROM material WHERE pleased IS NULL";

                    try{   
                        pst = conn.prepareStatement(sql);
                        rs = pst.executeQuery();
                        
                        Object[] columnData = new Object[4];
                        while (rs.next()){
                            columnData[0] = rs.getString("ID");
                            columnData[1] = rs.getString("workcenter");
                            columnData[2] = rs.getString("material");
                            columnData[3] = rs.getString("date");
                            
                            model.addRow(columnData);
                        }
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    } 
                }
            }
        }, begin, timeInterval);
    }
    
    public void AddRow(){
        String request = jtxtRequest.getText();

        if (request != null && !request.trim().isEmpty()){
            Date date = new Date();  
            SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yy HH:mm:ss");  
            String strDate = formatter.format(date);
            String lastrowstr = null;
            DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
            mod.setRowCount(0);

            //get last row
            try {
                Statement st = conn.createStatement();
                String query = ("SELECT * FROM material ORDER BY Id DESC LIMIT 1;");
                rs = st.executeQuery(query);
                if (rs.next()) {
                    int lastrow = rs.getInt("ID") + 1;
                    lastrowstr = String.valueOf(lastrow);
                }
            }catch (Exception e){
                e.printStackTrace();
            }
            
            String sql ="INSERT INTO material(ID, workcenter, material, date, pleased, dateofsupply)VALUES(?,?,?,?,?,?)";
            
            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1, lastrowstr);
                pst.setString(2, jLabel2.getText());
                pst.setString(3, jtxtRequest.getText().toUpperCase());
                pst.setString(4, strDate);
                pst.execute();

                rs.close();
                pst.close();
            }catch(HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }
            
            updateTable();
            DefaultTableModel iModel = (DefaultTableModel) jTable1.getModel();
        
        }else{
            JOptionPane.showMessageDialog(null, "Insert Material", "Material Request", JOptionPane.OK_OPTION);
        }
    }

    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtRequest = new javax.swing.JTextField();
        jbtnPedir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbtnHistory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Solicitação de Matéria Prima - Produção");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Matéria-Prima em falta:");

        jtxtRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtRequestActionPerformed(evt);
            }
        });
        jtxtRequest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtRequestKeyPressed(evt);
            }
        });

        jbtnPedir.setText("Pedir");
        jbtnPedir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPedirActionPerformed(evt);
            }
        });

        jLabel2.setText("Corte");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jtxtRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnPedir)
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(210, 210, 210))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnPedir))
                .addGap(26, 26, 26))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Centro de Trabalho", "MateriaPrima", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jbtnHistory.setText("Histórico");
        jbtnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(jbtnHistory)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtRequestActionPerformed
        
    }//GEN-LAST:event_jtxtRequestActionPerformed

    private void jbtnPedirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPedirActionPerformed
        AddRow();
        jtxtRequest.setText("");
              
    }//GEN-LAST:event_jbtnPedirActionPerformed

    private void jtxtRequestKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtRequestKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            AddRow();
        }
         
    }//GEN-LAST:event_jtxtRequestKeyPressed

    private void jbtnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHistoryActionPerformed
        new History().setVisible(true);
    }//GEN-LAST:event_jbtnHistoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Request().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnHistory;
    private javax.swing.JButton jbtnPedir;
    private javax.swing.JTextField jtxtRequest;
    // End of variables declaration//GEN-END:variables
}
